name: Test installation from a ZIP file

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  build-archive:
    name: Build Archive
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1']
        shopware-version: ['v6.5.7.4', 'v6.5.8.17']
    outputs:
      PLUGIN_VERSION: ${{ steps.version.outputs.PLUGIN_VERSION }}
    env:
      PLUGIN_NAME: 'ITBConfigurableListingFilters'
    steps:
      - name: Checkout GitHub action code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: '.github/actions/setup-plugin'
          sparse-checkout-cone-mode: false

      - name: Setup Shopware and Plugin
        uses: ./.github/actions/setup-plugin
        with:
          shopware-version: ${{ matrix.shopware-version }}
          php-version: ${{ matrix.php-version }}

      - name: Extract plugin version
        id: version
        working-directory: 'custom/plugins/ITBConfigurableListingFilters'
        run: |
          PLUGIN_VERSION=$(jq -r '.version' "./composer.json")
          echo "PLUGIN_VERSION=$PLUGIN_VERSION" >> $GITHUB_ENV
          echo "PLUGIN_VERSION=$PLUGIN_VERSION" >> $GITHUB_OUTPUT
          echo "Plugin Version: $PLUGIN_VERSION"

      - name: Apply zip blocklist
        working-directory: 'custom/plugins/ITBConfigurableListingFilters'
        run: |
          # Create a working copy without files in blocklist
          if [ -f .sw-zip-blocklist ]; then
            while IFS= read -r line || [[ -n "$line" ]]; do
              if [[ -n "$line" && ! "$line" =~ ^# ]]; then
                rm -rf "$line" || true
              fi
            done < .sw-zip-blocklist
            rm -rf .sw-zip-blocklist
          fi

      - name: Install shopware-cli
        uses: shopware/shopware-cli-action@72d5fa2c934424f3b1360ccae288aa304b91a4c9 # v1.0.6

      - name: Create .shopware-extension.yml
        working-directory: 'custom/plugins/ITBConfigurableListingFilters'
        run: |
          echo 'build:' > .shopware-extension.yml
          echo '  shopwareVersionConstraint: ">=6.5.0.0 <6.6.0.0"' >> .shopware-extension.yml

      - name: Build extension
        working-directory: 'custom/plugins/ITBConfigurableListingFilters'
        run: |
          # Build the extension using shopware-cli
          shopware-cli extension build . --config .shopware-extension.yml

      - name: Build and rename ZIP
        working-directory: 'custom/plugins/ITBConfigurableListingFilters'
        run: |
          # Create ZIP using shopware-cli
          shopware-cli extension zip . --disable-git

          # Find and rename the ZIP file
          SOURCE_ZIP=$(find . -name "*.zip" -type f | head -n 1)
          TARGET_ZIP="${{ env.PLUGIN_NAME }}_${{ env.PLUGIN_VERSION }}_${{ matrix.shopware-version }}.zip"

          echo "Source ZIP: $SOURCE_ZIP"
          echo "Target ZIP: $TARGET_ZIP"

          mv "$SOURCE_ZIP" "$TARGET_ZIP"
          echo "Renamed to $TARGET_ZIP"

      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: '${{ env.PLUGIN_NAME }}_${{ env.PLUGIN_VERSION }}_${{ matrix.shopware-version }}'
          path: 'custom/plugins/ITBConfigurableListingFilters/${{ env.PLUGIN_NAME }}_${{ env.PLUGIN_VERSION }}_${{ matrix.shopware-version }}.zip'

      - name: Checkout GitHub action code to be correctly deleted in the post step
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: '.github/actions/setup-plugin'
          sparse-checkout-cone-mode: false

  test-installation:
    name: Test Installation
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.1']
        shopware-version: ['v6.5.7.4', 'v6.5.8.17']
    needs: build-archive
    env:
      PLUGIN_NAME: 'ITBConfigurableListingFilters'
      PLUGIN_VERSION: ${{ needs.build-archive.outputs.PLUGIN_VERSION }}
    steps:
      - name: Setup Shopware
        uses: shopware/setup-shopware@0f9fb21530181706f9b1f02da96307c564b8fe5f # v2.0.2
        with:
          shopware-version: ${{ matrix.shopware-version }}
          php-version: ${{ matrix.php-version }}
          mysql-version: 'builtin'
          install: 'true'
          install-admin: 'true'
          install-storefront: 'true'
          env: 'prod'

      - name: Download artifact
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: '${{ env.PLUGIN_NAME }}_${{ env.PLUGIN_VERSION }}_${{ matrix.shopware-version }}'

      - name: Import Plugin Archive
        shell: bash
        run: php bin/console plugin:zip-import "${{ env.PLUGIN_NAME }}_${{ env.PLUGIN_VERSION }}_${{ matrix.shopware-version }}.zip"

      - name: Install Plugin
        shell: bash
        run: php bin/console plugin:install --activate "${{ env.PLUGIN_NAME }}"
