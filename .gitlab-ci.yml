stages:
    - setup
    - style
    - quality
    - test
    - package
    - publish

cache:
    key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

variables:
    DOCKER_DRIVER: overlay2
    BASE_SW_VERSION: '6.5.6'
    SPECIFIC_SW_VERSION: '6.5.6.0'
    PHP_VERSION: '8.1'
    DOCKWARE_CI: '1'
    COMPOSER_COMMAND: "composer install --prefer-dist --no-ansi --no-interaction --no-progress --optimize-autoloader"

before_script:
    - export COMPOSER_HOME="$HOME/.config/composer"
    - cp -r ${CI_PROJECT_DIR} /var/www/html/custom/plugins/${CI_PROJECT_NAME}

composer:
    stage: setup
    image: "dockware/dev:${SPECIFIC_SW_VERSION}"
    script:
        - cd /var/www/html/custom/plugins/${CI_PROJECT_NAME}
        - ${COMPOSER_COMMAND}
        - cp -r /var/www/html/custom/plugins/${CI_PROJECT_NAME}/vendor ${CI_PROJECT_DIR}
    artifacts:
        paths:
            - vendor/
        expire_in: 1 days
        when: always
    cache:
        key: global
        paths:
            - vendor

ecs:
    stage: style
    image: "dockware/dev:${SPECIFIC_SW_VERSION}"
    needs: ["composer"]
    dependencies:
        - composer
    script:
        - cd /var/www/html/custom/plugins/${CI_PROJECT_NAME}
        - ${COMPOSER_COMMAND}
        - vendor/bin/ecs check src -v
    cache:
        key: global
        paths:
            - vendor
        policy: pull

rector:
    stage: quality
    image: "dockware/dev:${SPECIFIC_SW_VERSION}"
    needs: ["composer"]
    dependencies:
        - composer
    script:
        - cd /var/www/html/custom/plugins/${CI_PROJECT_NAME}
        - ${COMPOSER_COMMAND}
        - vendor/bin/rector process -c rector.php --dry-run -a vendor/autoload.php -a ../../../vendor/autoload.php src tests
    cache:
        key: global
        paths:
            - vendor
        policy: pull

phpstan:
    stage: quality
    image: "dockware/dev:${SW_VERSION}"
    parallel:
        matrix:
            -   PHP_VERSION: [ "8.1" ]
                SW_VERSION: [ "6.5.6.0" ]
    needs: ["composer"]
    dependencies:
        - composer
    except:
        variables: [ $DISABLE_PHPSTAN == "1" ]
    script:
        - cd /var/www/html/custom/plugins/${CI_PROJECT_NAME}
        - ${COMPOSER_COMMAND}
        - vendor/bin/phpstan analyse -c phpstan-pipeline.neon -a vendor/autoload.php -a ../../../vendor/autoload.php src tests
    cache:
        key: global
        paths:
            - vendor
        policy: pull

#phpunit:
#    stage: test
#    image: "dockware/dev:${SW_VERSION}"
#    parallel:
#        matrix:
#            -   PHP_VERSION: [ "8.1" ]
#                SW_VERSION: [ "6.5.6.0" ]
#    needs: ["composer"]
#    dependencies:
#        - composer
#    except:
#        variables: [ $DISABLE_PHPUNIT == "1" ]
#    script:
#        - cd /var/www/html && php bin/console plugin:refresh
#        - cd /var/www/html && php bin/console plugin:install --clearCache --activate ${CI_PROJECT_NAME}
#        - cd /var/www/html && php bin/console plugin:refresh
#        - "cd /var/www/html/custom/plugins/${CI_PROJECT_NAME} && php -d pcov.enabled=1 -d pcov.directory=${CI_PROJECT_DIR}
#            vendor/bin/phpunit
#            --configuration phpunit.xml.dist
#            --log-junit ${CI_PROJECT_DIR}/phpunit.junit.xml
#            --colors=never
#            --coverage-clover ${CI_PROJECT_DIR}/phpunit.clover.xml
#            --coverage-html ${CI_PROJECT_DIR}/phpunit-coverage-html
#            --coverage-text"
#    coverage: '/^\s*Lines:\s*(\d+(?:\.\d+)?%)/'
#    artifacts:
#        paths:
#            - ${CI_PROJECT_DIR}/phpunit.clover.xml
#        reports:
#            junit: ${CI_PROJECT_DIR}/phpunit.junit.xml
#    cache:
#        key: global
#        paths:
#            - vendor
#        policy: pull

install:
    stage: test
    image: "dockware/dev:${SW_VERSION}"
    parallel:
        matrix:
            -   PHP_VERSION: [ "8.1" ]
                SW_VERSION: [ "6.5.6.0" ]
    needs: ["composer"]
    dependencies:
        - composer
    except:
        variables: [ $DISABLE_INSTALL == "1" ]
    script:
        - cd /var/www/html && php bin/console plugin:refresh
        - cd /var/www/html && php bin/console plugin:install --clearCache --activate ${CI_PROJECT_NAME}
        - cd /var/www/html && php bin/console plugin:refresh
        - cd /var/www/html && php bin/console plugin:list
    cache:
        key: global
        paths:
            - vendor
        policy: pull

build:pack-plugin:
    stage: package
    image:
        name: ghcr.io/friendsofshopware/platform-plugin-dev:v${BASE_SW_VERSION}
        entrypoint: [""]
    only:
        - tags
        - main
        - /^integration.*$/
        - /^fix.*$/
    needs: []
    dependencies: []
    except:
        variables: [ $DISABLE_PACKAGE == "1" ]
    before_script: []
    script:
        - start-mysql
        - ln -s "$(pwd)" "/plugins/${CI_PROJECT_NAME}"
        - plugin-uploader ext:prepare "/plugins/${CI_PROJECT_NAME}"
        - rm -rf $( cat .sw-zip-blocklist ) && rm -rf .sw-zip-blocklist
        - pack-plugin ${CI_PROJECT_NAME}
        - plugin-uploader ext:validate "$(realpath "ModelCarWorldProductPropertiesExtension.zip")" || true
    artifacts:
        paths:
            - "ModelCarWorldProductPropertiesExtension.zip"
        expire_in: 1 week
    cache:
        key: global
        paths:
            - vendor
        policy: pull

publish:
    only:
        - tags
    stage: publish
    before_script: []
    script:
        - 'curl --header "Job-Token: $CI_JOB_TOKEN" --data tag=${CI_COMMIT_TAG} "${CI_API_V4_URL}/projects/$CI_PROJECT_ID/packages/composer"'
